@using MudBlazor

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="@FluentishTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {
    private MudThemeProvider? _mudThemeProvider;
    private bool _isDarkMode;

    MudTheme FluentishTheme = new MudTheme()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = "#0078d4",           // Microsoft Blue
            Background = "#faf9f8",        // Fluent light background
            Surface = "#ffffff",           // Fluent cards
            AppbarBackground = "#f3f2f1",  // Fluent header
            Secondary = "#605e5c",         // Fluent secondary gray
            Tertiary = "#323130"           // Fluent tertiary
        },
        PaletteDark = new PaletteDark()
        {
            Primary = "#0078d4",           // Same blue in dark!
            Background = "#201f1e",        // Fluent dark background
            Surface = "#292827",           // Fluent dark cards
            AppbarBackground = "#323130",  // Fluent dark header
            Secondary = "#8a8886",         // Fluent secondary gray dark
            Tertiary = "#605e5c"           // Fluent tertiary dark
        },
        LayoutProperties = new LayoutProperties()
        {
            DefaultBorderRadius = "4px"    // Fluent-like rounded corners
        }
    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && _mudThemeProvider is not null)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }

    public async Task ToggleTheme()
    {
        _isDarkMode = !_isDarkMode;
        StateHasChanged();
    }
}
