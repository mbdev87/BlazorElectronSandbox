@page "/weather"
@using LogAnalytics.Client.Services
@rendermode @(Global.DefaultRenderMode)
@inject HttpClient Http

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <MudDataGrid Items="@forecastsList" SortMode="SortMode.Multiple" Filterable="true">
        <Columns>
            <PropertyColumn Property="x => x!.Date" Title="Date" />
            <PropertyColumn Property="x => x!.TemperatureC" Title="Temp. (C)" />
            <PropertyColumn Property="x => x!.TemperatureF" Title="Temp. (F)" />
            <PropertyColumn Property="x => x!.Summary" Title="Summary" />
        </Columns>
    </MudDataGrid>
}

@code {
    private IQueryable<WeatherForecast>? forecasts;
    private List<WeatherForecast>? forecastsList;

    protected override async Task OnInitializedAsync()
    {
        forecastsList = await Http.GetFromJsonAsync<List<WeatherForecast>>("sample-data/weather.json");
        forecasts = forecastsList?.AsQueryable();
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
