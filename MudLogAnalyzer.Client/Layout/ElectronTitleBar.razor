@inject IJSRuntime JS

<div class="electron-titlebar">
    <div class="titlebar-drag-region">
        <MudText Typo="Typo.body2" Class="titlebar-title">@Title</MudText>
    </div>
    <div class="window-controls">
        <button class="window-control-btn minimize-btn" @onclick="MinimizeWindow">
            <MudIcon Icon="@Icons.Material.Filled.Minimize" Size="Size.Small" />
        </button>
        <button class="window-control-btn maximize-btn" @onclick="MaximizeWindow">
            <MudIcon Icon="@Icons.Material.Filled.CropSquare" Size="Size.Small" />
        </button>
        <button class="window-control-btn close-btn" @onclick="CloseWindow">
            <MudIcon Icon="@Icons.Material.Filled.Close" Size="Size.Small" />
        </button>
    </div>
</div>

@code {
    [Parameter]
    public string Title { get; set; } = "MudLogAnalyzer";

    private async Task MinimizeWindow()
    {
        await JS.InvokeVoidAsync("electronWindowControl", "minimize");
    }

    private async Task MaximizeWindow()
    {
        await JS.InvokeVoidAsync("electronWindowControl", "maximize");
    }

    private async Task CloseWindow()
    {
        await JS.InvokeVoidAsync("electronWindowControl", "close");
    }
}
