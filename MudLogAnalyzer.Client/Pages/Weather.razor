@page "/weather"



<PageTitle>Weather</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Weather forecast</MudText>
<MudText Typo="Typo.body1" Class="mb-8">This component demonstrates fetching data from the server.</MudText>

@if (forecasts == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true"/>
}
else
{
    <MudTable Items="forecasts"
              Hover="false"
              Virtualize="true"
              FixedHeader="true"
              Height="70vh"
              Dense="true"
              >
        <HeaderContent>
            <MudTh>Date</MudTh>
            <MudTh>Temp. (C)</MudTh>
            <MudTh>Temp. (F)</MudTh>
            <MudTh>Summary</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Date">@context.Date</MudTd>
            <MudTd DataLabel="Temp. (C)">@context.TemperatureC</MudTd>
            <MudTd DataLabel="Temp. (F)">@context.TemperatureF</MudTd>
            <MudTd DataLabel="Summary">@context.Summary</MudTd>
        </RowTemplate>
    </MudTable>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);

        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };

        forecasts = new WeatherForecast[200_000];
        for (int i = 0; i < forecasts.Length; i++)
        {
            var tempC = Random.Shared.Next(-20, 55);
            forecasts[i] = new WeatherForecast
            {
                Date = startDate.AddDays(i + 1),
                TemperatureC = tempC,
                TemperatureF = 32 + (int)(tempC / 0.5556),
                Summary = summaries[Random.Shared.Next(summaries.Length)]
            };
        }
    }

    private sealed class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public int TemperatureF { get; set; }
        public string? Summary { get; set; }
    }

}
